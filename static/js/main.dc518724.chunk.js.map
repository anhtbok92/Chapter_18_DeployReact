{"version":3,"sources":["api/index.js","actions/index.js","components/Cart.js","components/Header.js","components/Product.js","App.js","reducers/index.js","stores/index.js","index.js"],"names":["API_URL","actFetchProductsRequest","dispatch","endpoint","method","body","axios","url","data","catch","err","console","log","callApi","then","res","type","payload","connect","state","items","_todoProduct","IncreaseQuantity","DecreaseQuantity","DeleteCart","ListCart","TotalCart","Object","keys","Carts","forEach","item","quantity","price","push","className","map","key","onClick","name","src","image","style","width","height","margin","tonggia","Number","toLocaleString","colSpan","Header","to","this","props","numberCart","Component","Product","_products","length","marginTop","index","marginBottom","cursor","AddCart","App","path","exact","component","Cart","initProduct","ShopApp","combineReducers","action","cart","id","check","_cart","quantity_","filter","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc518724.chunk.js","sourcesContent":["import axios from 'axios';\r\n//mock API\r\nlet API_URL = 'https://5adc8779b80f490014fb883a.mockapi.io';\r\n   export default function callApi(endpoint, method = 'GET', body) {\r\n       return axios({\r\n           method,\r\n           url: `${API_URL}/${endpoint}`,\r\n           data: body\r\n       }).catch(err => {\r\n           console.log(err);\r\n       });\r\n}","import callApi from '../api'\r\nexport const INCREASE_QUANTITY = 'INCREASE_QUANTITY';\r\nexport const DECREASE_QUANTITY = 'DECREASE_QUANTITY';\r\nexport const GET_ALL_PRODUCT = 'GET_ALL_PRODUCT';\r\nexport const GET_NUMBER_CART = 'GET_NUMBER_CART';\r\nexport const ADD_CART = 'ADD_CART' ;\r\nexport const UPDATE_CART = 'UPDATE_CART';\r\nexport const DELETE_CART = 'DELETE_CART';\r\n\r\nexport const actFetchProductsRequest = () => {\r\n    return (dispatch) => {\r\n        return callApi('/products', 'GET', null).then(res => {\r\n          \r\n            dispatch(GetAllProduct(res.data));\r\n        });\r\n    }\r\n}\r\n\r\n/*GET_ALL_PRODUCT*/\r\nexport function GetAllProduct(payload){\r\n    return{\r\n        type:'GET_ALL_PRODUCT',\r\n        payload\r\n    }\r\n}\r\n\r\n/*GET NUMBER CART*/\r\nexport function GetNumberCart(){\r\n    return{\r\n        type:'GET_NUMBER_CART'\r\n    }\r\n}\r\n\r\nexport function AddCart(payload){\r\n    return {\r\n        type:'ADD_CART',\r\n        payload\r\n    }\r\n}\r\nexport function UpdateCart(payload){\r\n    return {\r\n        type:'UPDATE_CART',\r\n        payload\r\n    }\r\n}\r\nexport function DeleteCart(payload){\r\n    return{\r\n        type:'DELETE_CART',\r\n        payload\r\n    }\r\n}\r\n\r\nexport function IncreaseQuantity(payload){\r\n    return{\r\n        type:'INCREASE_QUANTITY',\r\n        payload\r\n    }\r\n}\r\nexport function DecreaseQuantity(payload){\r\n    return{\r\n        type:'DECREASE_QUANTITY',\r\n        payload\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport {IncreaseQuantity,DecreaseQuantity,DeleteCart} from '../actions';\r\n\r\nfunction Cart({items,IncreaseQuantity,DecreaseQuantity,DeleteCart}){\r\n  //  console.log(items)\r\n    let ListCart = [];\r\n    let TotalCart=0;\r\n    Object.keys(items.Carts).forEach(function(item){\r\n        TotalCart+=items.Carts[item].quantity * items.Carts[item].price;\r\n        ListCart.push(items.Carts[item]);\r\n    });\r\n    function TotalPrice(price,tonggia){\r\n        return Number(price * tonggia).toLocaleString('en-US');\r\n    }\r\n    \r\n    \r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Name</th>\r\n                        <th>Image</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Total Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    ListCart.map((item,key)=>{\r\n                        return(\r\n                            <tr key={key}>    \r\n                            <td><i className=\"badge badge-danger\" onClick={()=>DeleteCart(key)}>X</i></td>\r\n                            <td>{item.name}</td>\r\n                            <td><img src={item.image} style={{width:'100px',height:'80px'}}/></td>\r\n                            <td>{item.price} $</td>\r\n                            <td>\r\n                                    <span className=\"btn btn-primary\" style={{margin:'2px'}} onClick={()=>DecreaseQuantity(key)}>-</span>\r\n                                    <span className=\"btn btn-info\">{item.quantity}</span>\r\n                                    <span className=\"btn btn-primary\" style={{margin:'2px'}} onClick={()=>IncreaseQuantity(key)}>+</span>\r\n                            </td>\r\n                            <td>{ TotalPrice(item.price,item.quantity)} $</td>\r\n                        </tr>\r\n                        )\r\n                    })\r\n                        \r\n                }\r\n                <tr>\r\n                    <td colSpan=\"5\">Total Carts</td>\r\n                    <td>{Number(TotalCart).toLocaleString('en-US')} $</td>\r\n                </tr>\r\n                </tbody>\r\n              \r\n            </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n  //  console.log(state)\r\n    return{\r\n        items:state._todoProduct\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{IncreaseQuantity,DecreaseQuantity,DeleteCart})(Cart)\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport  {connect} from  'react-redux'\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                  <nav className=\"navbar  navbar-dark bg-dark \">\r\n                        <ul className=\"nav\">\r\n                            <li className=\"nav-item\" ><Link to=\"/\" className=\"nav-link active\">Products</Link></li>\r\n                            <li className=\"nav-item\"><Link to=\"/carts\" className=\"nav-link\">Carts : {this.props.numberCart}</Link></li>\r\n                        </ul>\r\n                  </nav>\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        numberCart:state._todoProduct.numberCart\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Header)\r\n","import React, { Component } from 'react'\r\nimport {actFetchProductsRequest,AddCart} from '../actions'\r\nimport {connect} from 'react-redux';\r\nexport class Product extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n       \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.actFetchProductsRequest();\r\n    }\r\n    \r\n    render() {\r\n        const {_products} = this.props._products;\r\n        if(_products.length>0){\r\n           \r\n           return (\r\n                <div className=\"row\" style={{marginTop:'10px'}}>\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                _products.map((item,index)=>(\r\n                                    <div key={index} className=\"col-md-2\" style={{marginBottom:'10px'}}>\r\n                                        <img src={item.image} className=\"img-resposive\" style={{width:'100%',height:'100px'}}/>\r\n                                        <h5>{item.name}</h5>\r\n                                        <span className=\"badge badge-primary\" style={{cursor:'pointer'}} onClick={()=>this.props.AddCart(item)}>Add Cart</span>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) \r\n        }\r\n        return(\r\n            <div className=\"row\">\r\n                <h2>Loading...!</h2>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n         _products: state._todoProduct,\r\n       };\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        actFetchProductsRequest:()=>dispatch(actFetchProductsRequest()),\r\n        AddCart:item=>dispatch(AddCart(item))\r\n     \r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Product)\r\n","import React from 'react';\nimport {BrowserRouter as Router,Link, Route,Switch} from 'react-router-dom'\nimport Cart from './components/Cart';\nimport Header from './components/Header';\nimport Product from './components/Product';\nfunction App() {\n  return (\n     <Router>\n        <div className=\"container\">\n            <Header />\n            <Switch>\n               <Route path=\"/\" exact component={Product} />\n               <Route path=\"/carts\" exact component={Cart} />\n            </Switch>\n        </div>\n     </Router>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport {GET_ALL_PRODUCT,GET_NUMBER_CART,ADD_CART, DECREASE_QUANTITY, INCREASE_QUANTITY, DELETE_CART} from  '../actions';\r\n\r\nconst initProduct = {\r\n    numberCart:0,\r\n    Carts:[],\r\n    _products:[]\r\n}\r\n\r\nfunction todoProduct(state = initProduct,action){\r\n    switch(action.type){\r\n        case GET_ALL_PRODUCT: \r\n            return{\r\n                ...state,\r\n                _products:action.payload\r\n            }\r\n        case GET_NUMBER_CART:\r\n                return{\r\n                    ...state\r\n                }\r\n        case ADD_CART:\r\n            if(state.numberCart==0){\r\n                let cart = {\r\n                    id:action.payload.id,\r\n                    quantity:1,\r\n                    name:action.payload.name,\r\n                    image:action.payload.image,\r\n                    price:action.payload.price\r\n                } \r\n                state.Carts.push(cart); \r\n            }\r\n            else{\r\n                let check = false;\r\n                state.Carts.map((item,key)=>{\r\n                    if(item.id==action.payload.id){\r\n                        state.Carts[key].quantity++;\r\n                        check=true;\r\n                    }\r\n                });\r\n                if(!check){\r\n                    let _cart = {\r\n                        id:action.payload.id,\r\n                        quantity:1,\r\n                        name:action.payload.name,\r\n                        image:action.payload.image,\r\n                        price:action.payload.price\r\n                    }\r\n                    state.Carts.push(_cart);\r\n                }\r\n            }\r\n            return{\r\n                ...state,\r\n                numberCart:state.numberCart+1\r\n            }\r\n            case INCREASE_QUANTITY:\r\n                state.numberCart++\r\n                state.Carts[action.payload].quantity++;\r\n              \r\n               return{\r\n                   ...state\r\n               }\r\n            case DECREASE_QUANTITY:\r\n                let quantity = state.Carts[action.payload].quantity;\r\n                if(quantity>1){\r\n                    state.numberCart--;\r\n                    state.Carts[action.payload].quantity--;\r\n                }\r\n              \r\n                return{\r\n                    ...state\r\n                }\r\n            case DELETE_CART:\r\n                let quantity_ = state.Carts[action.payload].quantity;\r\n                return{\r\n                    ...state,\r\n                    numberCart:state.numberCart - quantity_,\r\n                    Carts:state.Carts.filter(item=>{\r\n                        return item.id!=state.Carts[action.payload].id\r\n                    })\r\n                   \r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst ShopApp = combineReducers({\r\n    _todoProduct:todoProduct\r\n});\r\nexport default ShopApp;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport ShopApp from '../reducers/index'\r\nconst store =  createStore(ShopApp,applyMiddleware(thunkMiddleware));\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./stores\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}